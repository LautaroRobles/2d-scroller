// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
Texture2D<float4> Input;
RWTexture2D<float4> Output;

float TargetHeight;
float K;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int kernelSize = 3;
    float kernel[3][3] = {{1/4 ,1/2,1/4},
                        { -0.1 , 0.99, 1/2},
                        {1/4 ,1/2,1/4}};

    // TODO: insert actual code here!
    float2 texCoord = id.xy;

    float height = Input[texCoord].r;
    float position = Input[texCoord].g;
    float velocity = Input[texCoord].b;

    float x = height - TargetHeight;
    float acceleration = -K * x;

    position += velocity;
    velocity += acceleration;

    /*
    for(int x = 0; x < kernelSize; x++) {
        for(int y = 0; y < kernelSize; y++) {
            outputColor += Input[position].x;
        }
    }
    */

    Output[texCoord] = float4(height, position, velocity, 1);
}
